---
import { Image } from "astro:assets";
import { BASE } from "@/constants";
import { PHOTOS, PATHS } from "@/lib/gallery";
---

<style>
    dialog {
        &::backdrop {
            top: 0px;
            right: 0px;
            bottom: 0px;
            left: 0px;
            background: rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(0.25rem);
        }
    }

    .close-dialog {
        position: absolute;
        top: 0;
        right: 0;
        background-color: white;
        padding: 0.5rem;
    }

    dialog[open] {
        animation: fade 0.5s forwards;
    }
    dialog:not([open]) {
        pointer-events: none;
        opacity: 0;
    }

    @keyframes fade {
        0% {
            opacity: 0;
        }
        100% {
            opacity: 1;
        }
    }

    svg {
        width: 16px;
    }
    svg:hover {
        scale: 1.1;
    }
    img {
        max-height: 80dvh;
        height: 100%;
        width: 100%;
        object-fit: contain;
    }
    .next,
    .prev {
        @apply hover:scale-125 transition-transform;
    }
    .root-container {
        display: grid;
        grid-template-columns: 5rem 1fr 5rem;
        gap: 0;
    }
</style>

<dialog class="image-dialog items-center justify-center bg-transparent">
    <div class="root-container">
        <button class="inline-block m-auto">
            <img
                class="prev size-16"
                src={`${BASE}/img/left-arrow.svg`}
                alt="Left"
            />
        </button>

        <div class="relative bg-white p-2 h-auto inline-block">
            <button type="button" class="close-dialog">
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 14 14"
                >
                    <path
                        stroke="#000"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
                </svg>
            </button>
            {
                PATHS.map((path, index) => (
                    <Image
                        src={PHOTOS[path]()}
                        class="image-full hidden"
                        alt={`Photo ${index + 1}`}
                        loading="lazy"
                    />
                ))
            }
        </div>
        <button class="inline-block m-auto">
            <img
                class="next size-16 rotate-180"
                src={`${BASE}/img/left-arrow.svg`}
                alt="Right"
            />
        </button>
    </div>
</dialog>

<script>
    import { $ } from "@/lib/dom-selector";

    document.addEventListener("astro:page-load", () => {
        const $imgs = document.querySelectorAll(".image-full");
        const $imageContainer = document.querySelectorAll(".image-container");
        const $imageDialog = $(".image-dialog") as HTMLDialogElement;
        const $closeButton = $(".close-dialog");

        if (!$imageDialog) return;

        $closeButton?.addEventListener("click", () => $imageDialog.close());

        $imageDialog.addEventListener("click", (event) => {
            const target = event.target as HTMLElement;
            if (target === $imageDialog) $imageDialog.close();
        });

        $imageContainer?.forEach((el) => {
            el.addEventListener("click", async (event) => {
                const currentTarget = event.currentTarget as HTMLElement;
                const { index } = currentTarget.dataset;
                if (!index) return;

                let currentIndex = parseInt(index);

                configGalleryNavigation(currentIndex, $imgs);
                $imageDialog.showModal();
            });
        });
    });

    function configGalleryNavigation(index, $imgs) {
        const $next = $(".next");
        const $prev = $(".prev");
        /**
         * TODO:
         *  - Fix gallery white background to fit image
         *  - Fix controls for mobile
         *  - Display index indicator
         */

        $imgs.forEach($img => $img.classList.add("hidden"));
        $imgs[index].classList.remove("hidden");

        $next.onclick = () => {
            index = ++index >= $imgs.length ? 0 : index;
            configGalleryNavigation(index, $imgs);
        };

        $prev.onclick = () => {
            index = --index < 0 ? $imgs.length - 1 : index;
            configGalleryNavigation(index, $imgs);
        };
    }
</script>
